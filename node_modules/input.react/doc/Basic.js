'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var Input = require('input.react');

var Basic = function (_React$Component) {
    _inherits(Basic, _React$Component);

    function Basic(props) {
        _classCallCheck(this, Basic);

        var _this = _possibleConstructorReturn(this, (Basic.__proto__ || Object.getPrototypeOf(Basic)).call(this, props));

        var self = _this;
        _this.state = {
            value: 'abc'
            // setInterval(function () {
            //     self.setState({value: Math.random()})
            // }, 500)
        };return _this;
    }

    _createClass(Basic, [{
        key: 'render',
        value: function render() {
            var self = this;
            return require("react").createElement(
                'div',
                { className: 'basicDemo' },
                require("react").createElement(Input, null),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    value: self.state.value,
                    onChange: function onChange(e) {
                        self.setState({ value: e.target.value });
                    },
                    placeholder: 'value & onChange',
                    append: self.state.value
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, { type: 'password', placeholder: 'password' }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, { placeholder: 'placeholder' }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    placeholder: require("react").createElement(
                        'span',
                        { style: { paddingLeft: 3 } },
                        require("react").createElement('img', { style: { width: '1.2em' }, src: 'https://avatars1.githubusercontent.com/u/20395258?s=200&v=4', alt: '' }),
                        'placeholder element '
                    )
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, { error: true, placeholder: 'error style' }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    error: true,
                    placeholder: 'error style',
                    prepend: '@icon-user',
                    append: '.com',
                    fullOutline: true
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    prepend: '@icon-user',
                    placeholder: 'prepend icon'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    prepend: '@icon-user',
                    fullOutline: true,
                    placeholder: 'full-outline (focus this input)'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    prepend: 'https://',
                    placeholder: 'prepend string'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    prepend: require("react").createElement(
                        'em',
                        null,
                        'element'
                    ),
                    placeholder: 'prepend element'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    append: '@icon-github',
                    placeholder: 'append icon'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    append: '.com',
                    placeholder: 'append string'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    append: require("react").createElement(
                        'em',
                        null,
                        'element'
                    ),
                    placeholder: 'append element'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(
                    Input.Group,
                    null,
                    require("react").createElement(Input, { append: '@', defaultValue: 'mail' }),
                    require("react").createElement(Input, { append: '.com', defaultValue: 'gamil' })
                ),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    search: true,
                    append: '@icon-search',
                    placeholder: 'search icon'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    search: true,
                    append: '\u641C\u7D22',
                    placeholder: 'search string'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    search: true,
                    append: require("react").createElement(
                        'em',
                        null,
                        'Search'
                    ),
                    placeholder: 'search string'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    type: 'textarea',
                    placeholder: 'textarea'
                }),
                require("react").createElement('hr', null),
                require("react").createElement(Input, {
                    error: true,
                    type: 'textarea',
                    placeholder: 'textarea error'
                })
            );
        }
    }]);

    return Basic;
}(React.Component);
/*ONFACE-DEL*/

Basic = require("react-hot-loader").hot(module)(Basic);
module.exports = Basic;