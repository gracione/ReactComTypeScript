"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _extend = require("extend");

var _extend2 = _interopRequireDefault(_extend);

var _util = require("util.react");

var _util2 = _interopRequireDefault(_util);

var _reactSpreadProps = require("react-spread-props");

var _reactSpreadProps2 = _interopRequireDefault(_reactSpreadProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

require('./index.css');

var Icon = function (_Component) {
    _inherits(Icon, _Component);

    function Icon(props) {
        _classCallCheck(this, Icon);

        var _this = _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).call(this, props));

        var self = _this;
        _this.state = {};
        return _this;
    }

    _createClass(Icon, [{
        key: "render",
        value: function render() {
            var self = this;
            var typeArray = self.props.type.split(' ');
            typeArray = typeArray.map(function (item) {
                return self.props.prefixClassName + '-' + item;
            });
            var classNameArray = [];
            classNameArray.push(self.props.prefixClassName);
            classNameArray.push(self.props.className);
            classNameArray.push(_util2.default.themes(self.props));
            classNameArray = classNameArray.concat(typeArray);

            var domProps = (0, _reactSpreadProps2.default)(self.props, {
                className: classNameArray.join(' ')
            }, {
                ignore: ['type']
            });

            return require("react").createElement(
                "span",
                domProps,
                self.props.children
            );
        }
    }]);

    return Icon;
}(_react.Component);

require('./props').default(Icon);
exports.default = Icon;

module.exports = Icon;