"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');

var Range = function (_React$Component) {
    _inherits(Range, _React$Component);

    function Range(props) {
        _classCallCheck(this, Range);

        var _this = _possibleConstructorReturn(this, (Range.__proto__ || Object.getPrototypeOf(Range)).call(this, props));

        var self = _this;
        self.state = {};
        return _this;
    }

    _createClass(Range, [{
        key: "render",
        value: function render() {
            var self = this;
            return require("react").createElement(
                "div",
                null,
                require("react").createElement(
                    "select",
                    { className: "rangeStart", value: self.props.start, onChange: function onChange(e) {
                            self.props.onChange(parseInt(e.target.value), parseInt(self.props.end));
                        } },
                    require("react").createElement(
                        "option",
                        { value: "1" },
                        "1"
                    ),
                    require("react").createElement(
                        "option",
                        { value: "2" },
                        "2"
                    ),
                    require("react").createElement(
                        "option",
                        { value: "3" },
                        "3"
                    )
                ),
                require("react").createElement(
                    "select",
                    { className: "rangeEnd", value: self.props.end, onChange: function onChange(e) {
                            self.props.onChange(parseInt(self.props.start), parseInt(e.target.value));
                        } },
                    require("react").createElement(
                        "option",
                        { value: "4" },
                        "4"
                    ),
                    require("react").createElement(
                        "option",
                        { value: "5" },
                        "5"
                    ),
                    require("react").createElement(
                        "option",
                        { value: "6" },
                        "6"
                    )
                )
            );
        }
    }]);

    return Range;
}(React.Component);

module.exports = Range;