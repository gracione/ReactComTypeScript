'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var propTypes = require('prop-types');
var spreadProps = require('react-spread-props');

var Button = function (_React$Component) {
    _inherits(Button, _React$Component);

    function Button(props) {
        _classCallCheck(this, Button);

        var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

        var self = _this;
        self.state = {};
        return _this;
    }

    _createClass(Button, [{
        key: 'render',
        value: function render() {
            var self = this;
            var domProps = spreadProps(self.props, {
                className: 'btn',
                style: { border: '1px solid skyblue' },
                onClick: function onClick(e) {
                    console.log('click btn');
                },
                onMouseDown: function onMouseDown(e) {
                    // 调用 stopTrigger 后
                    // <Button onMouseDown={} 的 onMouseDown 将不会触发
                    this.stopTrigger();
                }
            });
            return require("react").createElement(
                'div',
                null,
                require("react").createElement(
                    'pre',
                    { onClick: function onClick() {
                            self.props.onClickCode();
                        } },
                    JSON.stringify(domProps, null, 4)
                ),
                require("react").createElement(
                    'button',
                    _extends({
                        type: 'button'
                    }, domProps),
                    '[',
                    self.props.children,
                    ']'
                ),
                require("react").createElement('hr', null)
            );
        }
    }]);

    return Button;
}(React.Component);

Button.defaultProps = {
    onClickCode: function onClickCode() {}
};

var Basic = function (_React$Component2) {
    _inherits(Basic, _React$Component2);

    function Basic() {
        _classCallCheck(this, Basic);

        return _possibleConstructorReturn(this, (Basic.__proto__ || Object.getPrototypeOf(Basic)).apply(this, arguments));
    }

    _createClass(Basic, [{
        key: 'render',
        value: function render() {
            return require("react").createElement(
                'div',
                { className: 'basicDemo' },
                require("react").createElement(
                    Button,
                    {
                        onMouseEnter: function onMouseEnter() {
                            console.log('onMouseEnter');
                        }
                    },
                    'spread props'
                ),
                require("react").createElement(
                    Button,
                    {
                        formaction: '/some'
                    },
                    'warn converted formAction'
                ),
                require("react").createElement(
                    Button,
                    { style: { color: 'red' } },
                    'style'
                ),
                require("react").createElement(
                    Button,
                    { className: 'some' },
                    'className'
                ),
                require("react").createElement(
                    Button,
                    { onClick: function onClick(e) {
                            console.log('click proxy btn');
                        } },
                    'proxy'
                ),
                require("react").createElement(
                    Button,
                    { onMouseDown: function onMouseDown(e) {
                            console.log('This function will never execute.');
                        } },
                    'stopTrigger'
                ),
                require("react").createElement(
                    Button,
                    {
                        onClickCode: function onClickCode() {
                            console.log('click code');
                        }
                    },
                    'click code'
                )
            );
        }
    }]);

    return Basic;
}(React.Component);
/*ONFACE-DEL*/

Basic = require("react-hot-loader").hot(module)(Basic);
module.exports = Basic;